import {
  PlusSmallIcon,
  HeartIcon,
  ShareIcon,
  EyeIcon,
  CalendarDaysIcon,
} from '@heroicons/react/24/outline';
import { Swiper, SwiperSlide } from 'swiper/react';
import { Navigation } from 'swiper/modules';
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import 'swiper/css/scrollbar';
import { useEffect, useRef, useState } from 'react';
import {
  ChevronDoubleDownIcon,
  ShoppingCartIcon,
  XMarkIcon,
} from '@heroicons/react/20/solid';
import Input from '../ui/Input';
import Button from '../ui/Button';
import Select from '../ui/Select';

const products = [
  {
    id: 1,
    name: 'Winter tires Sailun Ice Blazer Alpine Plus 175/70 R13 82T',
    href: '#',
    imageSrc:
      'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg',
    imageAlt: "Front of men's Basic Tee in black.",
    price: '45',
    color: 'Black',
  },
  {
    id: 143,
    name: 'Winter tires Sailun Ice Blazer Alpine Plus 175/70 R13 82T',
    href: '#',
    imageSrc:
      'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg',
    imageAlt: "Front of men's Basic Tee in black.",
    price: '60',
    color: 'Black',
  },
  {
    id: 112,
    name: 'Winter tires Sailun Ice Blazer Alpine Plus 175/70 R13 82T',
    href: '#',
    imageSrc:
      'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg',
    imageAlt: "Front of men's Basic Tee in black.",
    price: '35',
    color: 'Black',
  },
  {
    id: 1765,
    name: 'Winter tires Sailun Ice Blazer Alpine Plus 175/70 R13 82T',
    href: '#',
    imageSrc:
      'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg',
    imageAlt: "Front of men's Basic Tee in black.",
    price: '45',
    color: 'Black',
  },
  {
    id: 1435,
    name: 'Winter tires Sailun Ice Blazer Alpine Plus 175/70 R13 82T',
    href: '#',
    imageSrc:
      'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg',
    imageAlt: "Front of men's Basic Tee in black.",
    price: '60',
    color: 'Black',
  },
  {
    id: 11342,
    name: 'Winter tires Sailun Ice Blazer Alpine Plus 175/70 R13 82T',
    href: '#',
    imageSrc:
      'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg',
    imageAlt: "Front of men's Basic Tee in black.",
    price: '35',
    color: 'Black',
  },
];
const catalog = [
  {
    id: 3,
    name: 'Cars',
    path: '/cars',
    current: false,
    svg: '<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.63567 9.22044C7.62896 9.2228 7.56826 9.24194 7.50079 9.26296L7.37812 9.3012L7.36353 9.46177C7.3555 9.55009 7.34572 9.63418 7.34179 9.64864C7.33612 9.66946 7.27075 9.7013 7.02719 9.8019C6.73634 9.92202 6.62423 9.96598 5.93209 10.2314C5.36543 10.4486 4.88697 10.6455 4.34452 10.8846C4.25385 10.9246 4.09448 10.9941 3.99037 11.0392C3.88627 11.0842 3.68019 11.1823 3.53242 11.2572C3.14398 11.4541 3.0752 11.4739 2.66925 11.5061C2.53705 11.5166 2.3612 11.5393 2.27846 11.5565C1.84918 11.6457 1.42721 11.6854 0.705524 11.7046L0.601917 11.7073L0.537865 11.8015C0.466156 11.907 0.399783 12.0339 0.400491 12.0642C0.400748 12.0752 0.422388 12.0994 0.448583 12.118C0.525897 12.173 0.545424 12.2951 0.492619 12.3934C0.413204 12.5412 0.387815 12.7224 0.387815 13.1412V13.4454L0.332605 13.4861C0.172859 13.6041 0.0588346 13.8698 0.020562 14.2131C0.00399026 14.3617 0.0118548 14.7306 0.0346181 14.8724C0.0455113 14.9403 0.0452792 14.9801 0.0336045 15.0473C0.0195729 15.1281 0.0212948 15.1508 0.0578943 15.3676C0.0795585 15.496 0.0994031 15.6123 0.101992 15.6261C0.104581 15.6399 0.137578 15.6738 0.175313 15.7015C0.277247 15.7761 0.491386 16.0096 0.529231 16.0873C0.580119 16.1919 0.61474 16.2311 0.69849 16.2793C0.954846 16.4267 1.44946 16.5295 2.299 16.6118C2.60468 16.6414 3.20461 16.6828 3.50067 16.6948L3.71315 16.7034L3.70489 16.6483C3.67194 16.4287 3.68533 16.0749 3.7357 15.8334C3.92141 14.943 4.5657 14.25 5.42307 14.0185C5.68201 13.9485 6.06259 13.9278 6.33185 13.9689C6.63437 14.0151 6.95461 14.1342 7.20197 14.2925C7.83069 14.6948 8.22992 15.3567 8.30184 16.116C8.32331 16.3427 8.29536 16.792 8.24623 17.0099C8.23618 17.0545 8.22796 17.0939 8.22796 17.0975C8.22796 17.1047 15.892 17.0933 19.0214 17.0814L21.0283 17.0737L21.0208 17.047C20.945 16.7737 20.9168 16.5774 20.9168 16.3232C20.9168 15.6968 21.1405 15.1258 21.5633 14.6732C21.9182 14.2934 22.3938 14.0434 22.9069 13.9672C23.1168 13.9361 23.4955 13.9477 23.6913 13.9914C24.0363 14.0684 24.336 14.2085 24.6138 14.4226C25.0337 14.7462 25.3404 15.218 25.4655 15.7329C25.561 16.1255 25.5553 16.6061 25.4511 16.9686C25.4446 16.9912 25.4508 16.9919 25.583 16.9838C26.2253 16.9442 26.6737 16.8826 26.8362 16.8115C26.9784 16.7493 27.1685 16.4772 27.1687 16.3358C27.1687 16.3047 27.1553 16.1395 27.1388 15.9686C27.111 15.6795 27.1101 15.6512 27.1269 15.5613C27.1999 15.1686 27.2338 14.8171 27.2339 14.4517C27.234 14.0251 27.1977 13.8323 27.084 13.6576C26.9131 13.3947 26.6109 13.2113 26.027 13.0161C25.4248 12.8148 25.0489 12.7197 23.9815 12.4985C23.1825 12.3329 22.3628 12.204 21.6673 12.1347C21.2113 12.0892 20.9434 12.0767 20.1714 12.0651C19.7314 12.0585 19.3404 12.0478 19.3024 12.0412C19.2159 12.0263 19.1564 11.9953 19.0173 11.8925C18.9111 11.814 18.7865 11.7362 18.2541 11.4156C17.8289 11.1597 17.5885 11.0213 16.9046 10.639C16.5801 10.4576 15.7057 10.004 15.5369 9.92946C15.266 9.80986 15.0218 9.72942 14.6088 9.62371C14.0484 9.48027 13.4554 9.39888 12.5205 9.33706C12.191 9.31526 10.5958 9.3153 10.1575 9.33709C9.66202 9.36175 9.04078 9.39976 8.6561 9.42896C8.38894 9.44924 8.29838 9.45212 8.26376 9.44146C8.23901 9.43382 8.15901 9.39011 8.08597 9.3443C7.91687 9.23826 7.85091 9.21385 7.73673 9.21513C7.68787 9.21568 7.64239 9.21806 7.63567 9.22044ZM11.5799 9.83273C11.5918 9.88664 11.6711 10.3911 11.7453 10.8846C11.8212 11.3899 11.9348 12.1099 11.9472 12.1645L11.954 12.1947L11.5351 12.1863C11.3046 12.1817 10.7919 12.1724 10.3956 12.1656C8.31801 12.13 7.52702 12.0962 6.98843 12.0199C6.74588 11.9856 6.66186 11.9578 6.55651 11.877C6.20117 11.6044 6.0816 11.2493 6.22251 10.8851C6.25746 10.7947 6.25604 10.7963 6.37783 10.7107C6.503 10.6227 6.60082 10.5699 6.79821 10.4835C7.27569 10.2745 7.94491 10.1005 8.6798 9.99404C9.46603 9.8802 10.4026 9.81367 11.3204 9.80646L11.5736 9.80447L11.5799 9.83273ZM12.606 9.8359C12.934 9.84725 13.1107 9.86268 13.3973 9.905C14.1676 10.0187 14.8595 10.1675 15.2631 10.3063C15.5379 10.4007 15.9436 10.6111 16.4223 10.9074C16.8174 11.152 17.3015 11.4849 17.3015 11.5119C17.3015 11.5173 17.2739 11.5251 17.2401 11.5292C17.1549 11.5396 17.0395 11.5957 16.9941 11.649C16.9731 11.6735 16.9417 11.725 16.9242 11.7633C16.8965 11.8242 16.8927 11.848 16.8941 11.9523C16.8951 12.0272 16.903 12.092 16.9154 12.1265C16.9263 12.1568 16.9352 12.1865 16.9352 12.1925C16.9352 12.1988 16.1085 12.2022 15.0107 12.2004L13.0862 12.1972L13.0392 12.0653C12.7173 11.1607 12.5178 10.5457 12.369 9.99858C12.3229 9.82944 12.3221 9.81461 12.3587 9.82242C12.3738 9.82565 12.4851 9.83171 12.606 9.8359ZM5.76112 14.0511C5.11887 14.1256 4.56312 14.4631 4.178 15.0125C4.08091 15.151 3.9431 15.4331 3.88744 15.6073C3.74255 16.0607 3.74263 16.5875 3.88763 17.0391C3.94365 17.2136 4.08073 17.4938 4.18257 17.642C4.28783 17.7952 4.56032 18.0758 4.71088 18.186C4.84629 18.2852 5.14538 18.4405 5.30404 18.4941C6.02974 18.7391 6.83474 18.5797 7.42113 18.0749C7.92903 17.6376 8.21575 17.0056 8.21575 16.3232C8.21575 15.7945 8.04954 15.3083 7.72581 14.8897C7.63461 14.7718 7.46586 14.601 7.35008 14.5094C6.90986 14.161 6.30875 13.9876 5.76112 14.0511ZM22.9923 14.0511C21.9947 14.1665 21.2058 14.9293 21.0388 15.9401C20.9758 16.3213 21.0037 16.6822 21.1251 17.058C21.2873 17.5602 21.6359 18.004 22.0886 18.2849C22.2137 18.3624 22.2424 18.377 22.3962 18.4405C23.1351 18.746 23.9572 18.6276 24.5938 18.1242C25.0506 17.763 25.3673 17.1812 25.4342 16.5802C25.5628 15.4259 24.8156 14.3482 23.7114 14.0953C23.4735 14.0409 23.2173 14.0251 22.9923 14.0511ZM6.23739 14.7089C6.41279 14.7366 6.52177 14.7718 6.68362 14.853C7.0093 15.0164 7.25187 15.2607 7.41136 15.5861C7.53318 15.8345 7.58072 16.0415 7.58072 16.3232C7.58072 16.6107 7.53161 16.8191 7.40352 17.0752C7.12297 17.6363 6.55221 17.9777 5.9382 17.9518C5.51987 17.9342 5.16746 17.7755 4.87575 17.4733C4.73462 17.3271 4.64562 17.1996 4.57038 17.0358C4.45117 16.7763 4.41388 16.6065 4.41388 16.3232C4.41388 16.0953 4.42858 15.9987 4.49322 15.802C4.6817 15.2284 5.16973 14.8039 5.74891 14.7097C5.88891 14.6869 6.09634 14.6866 6.23739 14.7089ZM23.5663 14.7266C23.8409 14.7927 24.0612 14.9079 24.2768 15.0979C24.6097 15.3913 24.8119 15.8545 24.8119 16.3232C24.8119 17.2528 24.0637 17.9916 23.1633 17.9512C22.7565 17.9329 22.4193 17.7854 22.127 17.4978C21.9853 17.3583 21.8928 17.2267 21.8013 17.0342C21.6424 16.7004 21.6003 16.353 21.6738 15.9825C21.7346 15.6753 21.8749 15.413 22.1068 15.1729C22.3478 14.9235 22.6163 14.7765 22.9435 14.7149C23.1114 14.6832 23.4097 14.6889 23.5663 14.7266ZM5.62068 14.9805C5.53944 15.0038 5.29319 15.1218 5.24303 15.1614C5.22057 15.1791 5.22332 15.184 5.30409 15.271C5.52173 15.5053 5.70171 15.6826 5.72186 15.6826C5.77106 15.6826 5.77333 15.6659 5.77333 15.3033V14.9541L5.73975 14.955C5.72129 14.9555 5.6677 14.967 5.62068 14.9805ZM6.22518 15.3019C6.22518 15.6617 6.22784 15.6826 6.27353 15.6826C6.28401 15.6826 6.40191 15.5701 6.53554 15.4325L6.7785 15.1824L6.71249 15.1391C6.58541 15.0557 6.39869 14.9781 6.28212 14.9601L6.22518 14.9513V15.3019ZM22.8519 14.9805C22.7666 15.005 22.5223 15.1228 22.4702 15.1646L22.4427 15.1867L22.6857 15.4363C22.9054 15.6621 22.9317 15.6852 22.9605 15.6778L22.9923 15.6696V15.3119V14.9541L22.9649 14.955C22.9498 14.9555 22.8989 14.967 22.8519 14.9805ZM23.4564 15.3119V15.6696L23.4883 15.6778C23.5171 15.6853 23.5434 15.6622 23.7649 15.4343L24.0096 15.1826L23.9498 15.1435C23.8526 15.08 23.7214 15.0194 23.6083 14.9857C23.439 14.9352 23.4564 14.8979 23.4564 15.3119ZM4.83585 15.6026C4.75735 15.7413 4.66204 15.997 4.66204 16.0688C4.66204 16.0817 4.73329 16.0843 5.01174 16.0816C5.35426 16.0783 5.36164 16.0777 5.37091 16.0519C5.37901 16.0294 5.34426 15.9885 5.13254 15.7709L4.8847 15.5162L4.83585 15.6026ZM6.85626 15.7683C6.63498 15.9961 6.61511 16.0202 6.62262 16.0509L6.63083 16.0846H6.98388H7.33694L7.32968 16.05C7.31315 15.9715 7.27192 15.8385 7.24357 15.7722C7.20749 15.6879 7.11526 15.5194 7.10521 15.5194C7.10131 15.5194 6.98928 15.6314 6.85626 15.7683ZM22.0715 15.5928C22.0026 15.7093 21.9468 15.8417 21.9187 15.9548C21.9047 16.0112 21.8933 16.0636 21.8933 16.0712C21.8933 16.0809 21.9951 16.084 22.243 16.0816C22.5855 16.0783 22.5929 16.0777 22.6021 16.0519C22.6102 16.0294 22.5755 15.9885 22.364 15.7712L22.1164 15.5167L22.0715 15.5928ZM24.0876 15.768C23.8662 15.9961 23.8463 16.0202 23.8538 16.0509L23.862 16.0846H24.2088C24.6103 16.0846 24.574 16.1029 24.5242 15.9258C24.4908 15.8073 24.4029 15.6113 24.3572 15.5535L24.3296 15.5186L24.0876 15.768ZM5.95506 15.7706C5.94419 15.7772 5.92827 15.8 5.91967 15.8213C5.9059 15.8555 5.90692 15.864 5.92844 15.8938C5.97824 15.9627 6.07864 15.9313 6.07864 15.8468C6.07864 15.7854 6.00553 15.7403 5.95506 15.7706ZM23.1689 15.7888C23.1322 15.8265 23.131 15.8573 23.1642 15.9007C23.1812 15.923 23.2012 15.9338 23.2253 15.9338C23.3044 15.9338 23.3393 15.8339 23.2777 15.784C23.2354 15.7498 23.2055 15.7512 23.1689 15.7888ZM5.9437 16.1262C5.81338 16.1709 5.76214 16.3002 5.82572 16.4239C5.85939 16.4894 5.92132 16.5263 5.99755 16.5263C6.08706 16.5263 6.14608 16.4837 6.18315 16.3925C6.24408 16.2425 6.09336 16.0749 5.9437 16.1262ZM23.173 16.1217C23.01 16.1742 22.9756 16.3998 23.116 16.4953C23.1991 16.5519 23.3216 16.5326 23.382 16.4536C23.4818 16.3232 23.4102 16.1432 23.2484 16.1177C23.2251 16.1141 23.1912 16.1159 23.173 16.1217ZM5.48024 16.2604C5.44774 16.2938 5.44883 16.3532 5.48255 16.3855C5.52675 16.4279 5.5802 16.4171 5.60889 16.3601C5.65193 16.2744 5.54623 16.1925 5.48024 16.2604ZM6.40171 16.2661C6.38522 16.2831 6.37172 16.3088 6.37172 16.3232C6.37172 16.3561 6.42388 16.4111 6.45501 16.4111C6.49393 16.4111 6.54269 16.3629 6.54269 16.3245C6.54269 16.2833 6.49763 16.2353 6.45892 16.2353C6.44393 16.2353 6.41819 16.2492 6.40171 16.2661ZM22.7199 16.2492C22.6841 16.2707 22.6722 16.3192 22.6927 16.3601C22.7214 16.4171 22.7749 16.4279 22.8191 16.3855C22.892 16.3156 22.8062 16.1976 22.7199 16.2492ZM23.6295 16.2644C23.5931 16.3042 23.5953 16.3529 23.6351 16.3851C23.6528 16.3994 23.6778 16.4111 23.6906 16.4111C23.7218 16.4111 23.7739 16.3561 23.7739 16.3232C23.7739 16.2878 23.7208 16.2353 23.685 16.2353C23.6691 16.2353 23.6441 16.2484 23.6295 16.2644ZM4.66931 16.609C4.69232 16.7382 4.78491 16.9677 4.85974 17.0809L4.88939 17.1258L5.13488 16.8721C5.35387 16.6457 5.3792 16.6153 5.36964 16.5901L5.35891 16.5619H5.00992H4.66093L4.66931 16.609ZM6.62818 16.5734C6.62818 16.5797 6.62487 16.5938 6.62083 16.6046C6.61564 16.6185 6.68423 16.6966 6.85348 16.8694C6.98549 17.0042 7.09831 17.1145 7.10419 17.1145C7.11847 17.1145 7.19444 16.9847 7.23793 16.8861C7.27001 16.8133 7.31181 16.6813 7.32968 16.5964L7.33694 16.5619H6.98256C6.77549 16.5619 6.62818 16.5667 6.62818 16.5734ZM21.8991 16.6087C21.9247 16.7495 22.0279 17.0029 22.0985 17.0988L22.1193 17.1271L22.3655 16.8728C22.585 16.6458 22.6104 16.6153 22.6009 16.5901L22.5901 16.5619H22.2403H21.8905L21.8991 16.6087ZM23.8538 16.5955C23.8463 16.6262 23.8658 16.6499 24.0814 16.8718C24.211 17.0053 24.3236 17.1145 24.3316 17.1145C24.3664 17.1145 24.4771 16.8863 24.5258 16.7143C24.5738 16.5446 24.6096 16.5619 24.2088 16.5619H23.862L23.8538 16.5955ZM5.93298 16.7457C5.9037 16.784 5.90301 16.7888 5.92122 16.8299C5.95887 16.9149 6.07864 16.8868 6.07864 16.793C6.07864 16.7147 5.98091 16.683 5.93298 16.7457ZM23.1642 16.7457C23.1246 16.7974 23.133 16.8405 23.1885 16.87C23.2718 16.9143 23.3514 16.8056 23.2854 16.7377C23.2503 16.7015 23.1952 16.7052 23.1642 16.7457ZM5.45875 17.2057C5.32952 17.3387 5.22379 17.4536 5.22379 17.4609C5.22379 17.4761 5.37045 17.5646 5.46193 17.6046C5.53531 17.6367 5.71805 17.6923 5.75028 17.6923C5.77233 17.6923 5.77333 17.677 5.77333 17.341C5.77333 17.0066 5.7722 16.9892 5.74972 16.9768C5.73672 16.9696 5.71881 16.9638 5.7099 16.9638C5.701 16.9638 5.58799 17.0726 5.45875 17.2057ZM6.24045 16.9721C6.22873 16.977 6.22518 17.0616 6.22518 17.3353C6.22518 17.7444 6.21128 17.7085 6.35418 17.6678C6.4714 17.6344 6.61973 17.5686 6.70638 17.5115L6.7785 17.464L6.53554 17.2139C6.30744 16.9791 6.27926 16.956 6.24045 16.9721ZM22.69 17.2057C22.5607 17.3387 22.455 17.4534 22.455 17.4605C22.455 17.4765 22.557 17.5405 22.6626 17.5906C22.7389 17.6268 22.9402 17.6923 22.9754 17.6923C22.9894 17.6923 22.9923 17.6315 22.9923 17.3356C22.9923 16.9601 22.9929 16.9638 22.9393 16.9638C22.9314 16.9638 22.8192 17.0726 22.69 17.2057ZM23.4717 16.9721C23.46 16.977 23.4564 17.0618 23.4564 17.3365V17.6945L23.5083 17.6855C23.633 17.6639 23.8707 17.5635 23.9711 17.49L24.0084 17.4627L23.7661 17.2132C23.5386 16.979 23.5105 16.956 23.4717 16.9721Z" fill="#566879"/></svg>',
  },
  {
    id: 4,
    name: 'Light trucks',
    path: '/trucktires',
    current: false,
    svg: '<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M14.2256 7.9944C15.175 8.00961 17.1546 8.08456 17.6464 8.12393C18.1601 8.165 18.5469 8.26348 18.8893 8.4403C19.1395 8.56955 20.2828 9.34556 20.9945 9.86922C21.488 10.2323 21.4967 10.2388 22.2424 10.7915C23.4631 11.6963 23.453 11.6899 24.1809 11.9997C26.0066 12.7767 26.7218 13.2295 27.021 13.7984C27.1921 14.1234 27.2331 14.3475 27.2336 14.9593C27.234 15.477 27.2388 15.5135 27.3056 15.5135C27.345 15.5135 27.3863 15.5378 27.3974 15.5676C27.4085 15.5973 27.4296 15.9097 27.4444 16.2617C27.4852 17.2342 27.4452 17.3367 26.8962 17.6677C26.4451 17.9396 25.859 18.0819 24.9328 18.1443L24.5596 18.1695L24.5408 17.668C24.5258 17.2661 24.5027 17.108 24.4244 16.8712C24.2117 16.2279 23.8425 15.7891 23.2823 15.514C22.8581 15.3056 22.5259 15.227 22.0722 15.2278C21.7529 15.2284 21.65 15.2452 21.4105 15.3366C20.8014 15.569 20.286 16.0875 20.0165 16.7388C19.8892 17.0464 19.7844 17.5262 19.7844 17.8012V18.0538L18.1489 18.0277C11.8467 17.9273 7.6747 17.8463 7.63912 17.8237C7.62195 17.8127 7.60777 17.7129 7.60762 17.6019C7.6072 17.2982 7.47186 16.7776 7.31372 16.4717C7.12177 16.1002 6.7238 15.6934 6.35998 15.4968C5.09884 14.8151 3.50586 15.247 2.88879 16.4379C2.75251 16.7008 2.61626 17.1947 2.61626 17.4257V17.575H2.26102C1.49174 17.575 0.419945 17.4012 0.30007 17.257C0.249397 17.1961 0.233892 17.1069 0.233892 16.8765C0.233892 16.6056 0.242023 16.5719 0.315649 16.5381L0.397406 16.5006L0.402966 14.1887C0.409658 11.3991 0.449631 10.9294 0.801086 9.509C1.1193 8.22299 1.13965 8.17441 1.39089 8.10078C1.70597 8.00848 4.22833 7.96667 8.93142 7.97585C11.5208 7.98091 13.9032 7.98923 14.2256 7.9944ZM15.7647 8.70378C15.7142 8.72354 15.6612 8.77088 15.647 8.80892C15.6021 8.92934 15.7733 10.8506 15.8406 10.9822C15.9636 11.2222 16.4285 11.6067 16.849 11.8161C16.9684 11.8755 17.2543 11.9258 17.9714 12.0134C18.5006 12.078 18.986 12.1407 19.0502 12.1528C19.1461 12.1708 19.1779 12.1571 19.23 12.0754C19.3198 11.9344 19.9064 11.1824 19.9533 11.1481C20.0196 11.0996 20.1793 11.1153 20.2676 11.1789C20.4259 11.2929 20.3812 11.4411 20.068 11.8416C19.912 12.0411 19.7844 12.2118 19.7844 12.2209C19.7844 12.2301 19.9589 12.2584 20.172 12.2839C20.3852 12.3095 20.5872 12.3381 20.6209 12.3477C20.6743 12.3628 20.6853 12.2987 20.7066 11.8486C20.72 11.5646 20.7413 11.1285 20.7539 10.8795L20.7768 10.4268L20.4224 10.1537C19.9462 9.7868 19.5298 9.52985 18.8958 9.21161C18.154 8.83934 18.0794 8.81763 17.1184 8.69414C16.8733 8.66263 15.8513 8.66991 15.7647 8.70378ZM24.0576 12.6115C24.0576 12.6198 24.2158 12.791 24.4091 12.9918C24.6025 13.1926 24.8817 13.5315 25.0297 13.7448C25.1777 13.9582 25.3226 14.1651 25.3516 14.2046C25.3919 14.2594 25.5162 14.2933 25.8767 14.3474C26.1365 14.3864 26.4541 14.4547 26.5824 14.4992C26.9066 14.6115 26.9081 14.611 26.8798 14.3984C26.8494 14.1702 26.694 13.8167 26.5607 13.6724C26.1486 13.2264 25.0923 12.752 24.2277 12.6247C24.1653 12.6155 24.1015 12.6054 24.0859 12.6022C24.0703 12.599 24.0576 12.6032 24.0576 12.6115ZM22.2802 15.7363C23.1613 15.8024 23.9164 16.4493 24.1128 17.3064C24.3276 18.2439 23.8887 19.216 23.0638 19.6298C22.5697 19.8775 22.2088 19.9244 21.7015 19.8067C20.7821 19.5934 20.1606 18.7787 20.1635 17.7905C20.1647 17.4028 20.2093 17.1978 20.3619 16.8787C20.7123 16.1468 21.4997 15.6778 22.2802 15.7363ZM5.3837 15.7514C6.19605 15.8591 6.89302 16.5174 7.06183 17.3365C7.20818 18.0467 7.03313 18.6897 6.54826 19.2228C6.26752 19.5315 5.84119 19.7647 5.42443 19.8377C4.50169 19.9992 3.55998 19.4355 3.21911 18.5177C3.11493 18.2372 3.07738 17.6377 3.14515 17.3365C3.37873 16.2982 4.34533 15.6138 5.3837 15.7514ZM21.6563 16.7681C21.2563 16.9793 21.0533 17.3288 21.052 17.8084C21.0514 18.0359 21.0705 18.1404 21.1387 18.2828C21.2513 18.5179 21.4534 18.719 21.7041 18.8455C21.8818 18.9353 21.937 18.9442 22.2181 18.9291C22.5777 18.9096 22.7842 18.8122 22.999 18.5606C23.2156 18.3068 23.2744 18.1167 23.2563 17.7278C23.2418 17.4156 23.2291 17.3694 23.1063 17.1791C22.9637 16.9582 22.7539 16.7855 22.5185 16.6953C22.2984 16.6109 21.8884 16.6455 21.6563 16.7681ZM4.74632 16.6997C4.50491 16.7734 4.23271 17.0169 4.09926 17.2785C4.0121 17.4493 3.99758 17.525 3.9975 17.8084C3.99743 18.0764 4.0135 18.1701 4.08232 18.3033C4.35561 18.8322 4.9495 19.0681 5.51151 18.8712C5.76144 18.7836 6.06018 18.4763 6.14534 18.2192C6.45694 17.2786 5.66542 16.4189 4.74632 16.6997ZM22.2991 17.5017C22.4929 17.6147 22.535 17.8869 22.3818 18.035C22.1589 18.2504 21.78 18.0368 21.845 17.7323C21.8883 17.5296 22.1335 17.405 22.2991 17.5017ZM5.25142 17.4975C5.43358 17.573 5.47306 17.8684 5.32176 18.0241C5.11763 18.234 4.77173 18.0737 4.77173 17.7691C4.77173 17.7232 4.82146 17.6346 4.88227 17.572C4.99454 17.4565 5.1008 17.4351 5.25142 17.4975Z" fill="#566879"/></svg>',
  },
  {
    id: 5,
    name: 'Cargo',
    path: '/cargo',
    current: false,
    svg: '<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M18.3826 7.28874C18.5092 7.32783 18.6147 7.43962 18.6508 7.57307C18.6704 7.64554 18.6818 8.994 18.6818 11.2605C18.682 15.1336 18.6901 14.9509 18.5123 15.1193L18.428 15.1992L9.61322 15.2072C1.26818 15.2148 0.792782 15.2123 0.691736 15.1593C0.633028 15.1285 0.555984 15.0627 0.520529 15.0131C0.456215 14.923 0.45606 14.9146 0.45606 11.2411C0.45606 7.73392 0.458736 7.55539 0.512684 7.47375C0.543842 7.42664 0.606878 7.36191 0.652763 7.32991C0.73292 7.27407 1.08262 7.27154 9.51457 7.26639C14.3897 7.26342 18.3328 7.27336 18.3826 7.28874ZM22.7755 8.71628C23.5587 8.73211 24.9586 8.79118 25.3281 8.82397C26.0074 8.88429 26.2787 9.02523 26.549 9.4583C26.67 9.65223 27.1802 10.7099 27.1802 10.7669C27.1802 10.8223 27.0781 10.8638 26.9211 10.8721C26.8413 10.8763 26.7622 10.8886 26.7452 10.8993C26.7266 10.9111 26.7688 11.0836 26.8513 11.3342C27.1631 12.28 27.4038 13.7717 27.4789 15.2232L27.4999 15.6307H27.3862H27.2724L27.2808 16.3579L27.2892 17.0852L27.464 17.0946L27.6388 17.1041L27.6583 17.2704C27.669 17.3619 27.6779 17.4972 27.678 17.5711L27.6783 17.7054L27.4837 17.7149L27.2892 17.7245L27.2805 18.1625L27.2719 18.6004L27.4673 18.61L27.6627 18.6195L27.6576 18.728C27.652 18.8478 27.5797 18.9644 27.4484 19.065C27.3655 19.1286 27.3192 19.1313 26.1274 19.1399L24.8922 19.1488L24.8894 18.7243C24.887 18.356 24.8761 18.2694 24.8075 18.07C24.426 16.9606 23.3782 16.3245 22.286 16.5391C21.3545 16.7221 20.591 17.5443 20.4993 18.4631L20.4789 18.6674H16.5957H12.7125L12.6905 18.4562C12.6533 18.0997 12.4983 17.7057 12.2811 17.4156C11.5422 16.4289 10.2552 16.2071 9.24998 16.8934C8.94613 17.1008 8.68421 17.4088 8.51611 17.7564C8.38562 18.0263 8.28675 18.3792 8.28551 18.5795L8.28498 18.6674H7.77621H7.26747L7.21396 18.3877C7.11008 17.8446 6.92795 17.5005 6.54855 17.1307C6.14686 16.7392 5.70844 16.5442 5.13987 16.504C4.45111 16.4553 3.69259 16.8141 3.26893 17.3888C3.03992 17.6995 2.80629 18.3058 2.80629 18.5895C2.80629 18.6674 2.80611 18.6674 2.46288 18.6674C2.05786 18.6674 1.94405 18.6293 1.82881 18.4552L1.74791 18.333L1.74804 17.3095C1.74813 16.3446 1.75168 16.28 1.81001 16.1818C1.84404 16.1245 1.9175 16.0491 1.97331 16.0142C2.07389 15.9511 2.14832 15.9506 10.7208 15.9505L19.3669 15.9504V12.4217C19.3669 9.03517 19.3692 8.89017 19.4245 8.82001C19.4781 8.75208 19.5149 8.74524 19.9459 8.72277C20.3754 8.70043 21.8251 8.6971 22.7755 8.71628ZM20.7563 10.167L20.6743 10.2332V12.021C20.6743 13.7661 20.6758 13.8102 20.7365 13.8726C20.7957 13.9334 20.8406 13.9366 21.6471 13.9369C22.5831 13.9374 22.6018 13.9401 23.1179 14.1526C23.8051 14.4356 24.7884 14.8031 25.188 14.9264C25.3506 14.9766 25.5075 15.0274 25.5366 15.0393C25.5853 15.0592 25.5902 15.0006 25.5988 14.2943C25.6074 13.593 25.6133 13.5218 25.6675 13.4604C25.7073 13.4153 25.7645 13.3931 25.8411 13.3931C25.9726 13.3931 25.9692 13.4343 25.8838 12.8657C25.7404 11.9114 25.477 11.129 25.1069 10.5578C24.7954 10.077 24.9372 10.1038 22.6941 10.1021C20.8628 10.1007 20.8372 10.1016 20.7563 10.167ZM23.0868 16.8461C23.7699 16.9869 24.3474 17.548 24.5516 18.2693C24.6226 18.5202 24.6225 18.9993 24.5514 19.2748C24.3899 19.9009 23.9186 20.4214 23.3143 20.6413C23.1203 20.7118 23.0317 20.7244 22.7132 20.7266C22.2964 20.7295 22.0593 20.6701 21.7327 20.4809C21.4832 20.3364 21.1452 19.974 21.0104 19.7063C20.8356 19.3592 20.7857 19.1486 20.7868 18.7633C20.7877 18.4747 20.8008 18.3895 20.8808 18.1546C20.9319 18.0044 21.0262 17.8003 21.0904 17.7011C21.3471 17.3039 21.7928 16.9799 22.245 16.8619C22.4405 16.8109 22.8761 16.8027 23.0868 16.8461ZM10.8842 16.8442C11.4031 16.9591 11.9092 17.3395 12.17 17.8105C12.4229 18.2672 12.4832 18.894 12.3212 19.3796C12.1144 19.9991 11.6735 20.4487 11.071 20.6545C10.7546 20.7625 10.233 20.7605 9.90412 20.65C9.30218 20.4478 8.80396 19.9051 8.64137 19.2748C8.57049 19 8.57009 18.5526 8.6405 18.2839C8.80742 17.6469 9.30131 17.1121 9.91383 16.905C10.129 16.8323 10.6757 16.798 10.8842 16.8442ZM5.49169 16.8634C6.02527 16.9962 6.50521 17.3974 6.74734 17.913C7.25978 19.0044 6.71782 20.2925 5.59233 20.6582C5.30081 20.753 4.74363 20.7585 4.48725 20.6691C3.86097 20.4509 3.41779 20.0099 3.2039 19.392C3.1116 19.1254 3.10391 18.4865 3.18977 18.2199C3.4162 17.517 3.92538 17.022 4.58649 16.862C4.82905 16.8033 5.25253 16.8039 5.49169 16.8634ZM22.3516 17.7709C21.9164 17.9407 21.6677 18.2985 21.6616 18.7633C21.6576 19.0642 21.7361 19.2724 21.9376 19.496C22.1678 19.7512 22.3488 19.8311 22.6977 19.8316C23.013 19.832 23.1774 19.7679 23.3985 19.5586C23.9653 19.0221 23.799 18.0896 23.0827 17.7871C22.8513 17.6895 22.576 17.6834 22.3516 17.7709ZM10.0547 17.8096C9.84068 17.912 9.6596 18.092 9.55902 18.3023C9.50131 18.423 9.4812 18.5245 9.4728 18.7377C9.46305 18.9843 9.47112 19.0366 9.5443 19.2012C9.73705 19.6347 10.1676 19.891 10.6127 19.8373C10.847 19.809 11.024 19.7231 11.2037 19.5505C11.5814 19.1877 11.6442 18.6438 11.3615 18.1824C11.2601 18.017 11.1486 17.9196 10.9154 17.7929C10.7769 17.7176 10.7305 17.7092 10.4951 17.7169C10.2866 17.7236 10.1933 17.7433 10.0547 17.8096ZM4.60629 17.7961C4.00659 18.0701 3.80369 18.8592 4.19184 19.408C4.65012 20.056 5.64494 19.9557 5.96899 19.2288C6.22754 18.6489 5.95691 17.9923 5.36518 17.7638C5.17016 17.6885 4.80803 17.7039 4.60629 17.7961ZM22.8211 18.4218C22.9421 18.4643 23.0712 18.6353 23.0712 18.7531C23.0712 19.0541 22.7725 19.2379 22.5099 19.0984C22.3364 19.0063 22.2689 18.701 22.3891 18.5522C22.487 18.431 22.6808 18.3725 22.8211 18.4218ZM10.6186 18.4223C10.746 18.4664 10.8687 18.6368 10.8687 18.7697C10.8687 18.9814 10.7004 19.1481 10.4889 19.1458C10.3574 19.1443 10.258 19.087 10.1822 18.969C9.99498 18.6774 10.2896 18.3083 10.6186 18.4223ZM5.15917 18.4255C5.30734 18.4913 5.38999 18.6207 5.38999 18.7868C5.38999 18.9065 5.3729 18.9471 5.28415 19.0382C4.99416 19.336 4.53628 18.9988 4.70506 18.6117C4.7803 18.4391 4.99332 18.3518 5.15917 18.4255Z" fill="#566879"/></svg>',
  },
  {
    id: 6,
    name: 'Agricultural',
    path: '/agricultural',
    current: false,
    svg: '<svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M7.28226 4.091C6.30246 4.122 5.42364 4.20334 4.62634 4.33684C3.91903 4.45524 3.82391 4.4937 3.70614 4.7087C3.61964 4.86664 3.62757 5.12711 3.72285 5.25806C3.8496 5.43231 3.93105 5.46847 4.19291 5.46679L4.43558 5.46524L4.42011 5.55997C4.41164 5.61206 4.34139 6.03209 4.26406 6.49333C4.18673 6.95458 4.01143 8.00287 3.87448 8.82286L3.62552 10.3138L3.36341 10.3344C2.90489 10.3704 2.59415 10.5088 2.39857 10.7641C2.35278 10.8239 2.17237 11.2404 1.99764 11.6896L1.67997 12.5063L1.93203 12.6346L2.18405 12.7628L2.33078 12.6381C2.71267 12.3135 3.29017 11.9546 3.80357 11.7227C5.68619 10.8725 7.89895 10.9754 9.67958 11.996C11.4332 13.0011 12.6397 14.7106 13.0132 16.7192C13.0765 17.0596 13.0959 17.2746 13.1081 17.7714C13.128 18.5856 13.1025 18.8167 12.882 19.826L12.8667 19.8959H15.8165H18.7663L18.7859 19.4969C18.8362 18.4777 19.1011 17.64 19.6298 16.8283C19.8153 16.5435 20.1929 16.0802 20.3417 15.955C20.4121 15.8958 20.4433 15.8502 20.4236 15.8354C19.2013 14.9134 18.0017 14.3206 16.6646 13.9776L16.3241 13.8902V13.6317C16.3241 13.4189 16.3324 13.3732 16.371 13.3732C16.475 13.3732 17.2739 13.5972 17.686 13.7419C18.7432 14.1132 19.6956 14.6185 20.5182 15.2446C20.6922 15.377 20.8475 15.4853 20.8634 15.4853C20.8793 15.4853 20.989 15.4211 21.1071 15.3428C21.3784 15.1626 21.9268 14.894 22.2379 14.7889C22.564 14.6787 23.0179 14.5871 23.4155 14.5513C24.0208 14.4968 24.8942 14.6152 25.4228 14.8233C25.4785 14.8453 25.4774 14.6259 25.4186 13.9634C25.3418 13.098 25.2259 12.5281 25.0625 12.213C25.0107 12.1129 24.9403 12.0125 24.9061 11.9898C24.8176 11.9312 24.1091 11.6856 23.5576 11.5225C22.0532 11.0776 20.2002 10.7182 18.3443 10.5115L17.7163 10.4415V8.24787C17.7163 6.32089 17.7222 6.03373 17.7651 5.88554C17.83 5.66095 17.9105 5.55177 18.0608 5.48437C18.3133 5.37122 18.4263 5.19079 18.4056 4.93395C18.3832 4.6572 18.218 4.48873 17.9462 4.46559C17.8061 4.45369 17.7484 4.46667 17.578 4.54852C17.3044 4.6799 17.03 4.96783 16.8882 5.27238C16.6893 5.69943 16.6873 5.72934 16.6873 8.16929V10.3604H16.4623C16.2741 10.3604 16.2348 10.3515 16.222 10.306C16.2135 10.2761 16.1027 9.79039 15.9757 9.22665C15.8486 8.6629 15.6021 7.57268 15.4279 6.80394C15.2537 6.03519 15.0888 5.30319 15.0614 5.17731C14.9578 4.7004 14.8799 4.65599 13.8877 4.50811C11.6281 4.17142 9.32861 4.02618 7.28226 4.091ZM9.12081 8.16876C9.12081 9.49529 9.1091 10.5505 9.09427 10.5599C9.07968 10.5691 8.99457 10.554 8.90511 10.5263C8.31565 10.3438 8.40157 10.3504 6.46151 10.3378L4.66481 10.3261L4.68421 10.2268C4.6949 10.1721 4.77204 9.71507 4.85567 9.21112C4.93929 8.70716 5.04008 8.10615 5.07963 7.87552C5.11919 7.6449 5.20739 7.12075 5.27567 6.71076C5.34391 6.30076 5.40729 5.92685 5.41646 5.87989L5.4332 5.79448H7.27699H9.12081V8.16876ZM14.1449 5.80864C14.1449 5.81644 14.2395 6.23923 14.3552 6.74822C14.4708 7.2572 14.7228 8.36923 14.9151 9.21938L15.2648 10.7651V12.7161V14.6672L14.3389 14.6647L13.413 14.6622L13.3448 14.4914C13.2356 14.2181 12.9986 13.7485 12.851 13.513C12.2786 12.5997 11.3383 11.7075 10.379 11.1671L10.1498 11.0381V8.41628V5.79448H12.1474C13.246 5.79448 14.1449 5.80084 14.1449 5.80864ZM5.80986 12.0706C4.48682 12.2282 3.26287 12.8506 2.32397 13.8432C1.58769 14.6217 1.10983 15.4945 0.858317 16.5201C0.515164 17.9192 0.664435 19.3432 1.28867 20.6258C2.11952 22.3331 3.67206 23.5167 5.50514 23.8404C7.05118 24.1134 8.6763 23.7097 9.93617 22.7398C11.0527 21.8802 11.8498 20.6061 12.1347 19.2254C12.4765 17.5695 12.1262 15.8713 11.1567 14.4828C10.9395 14.1718 10.4282 13.6197 10.123 13.3668C9.25903 12.6507 8.21042 12.1997 7.10792 12.0701C6.79725 12.0336 6.11866 12.0339 5.80986 12.0706ZM21.4731 12.217C21.5481 12.298 21.9535 13.3908 21.9535 13.5116C21.9535 13.7169 21.6742 13.8274 21.5379 13.6761C21.4636 13.5934 21.0455 12.5017 21.0455 12.3901C21.0455 12.2194 21.1645 12.1191 21.333 12.1479C21.3828 12.1564 21.4459 12.1875 21.4731 12.217ZM22.6619 12.2007C22.7488 12.2804 23.1742 13.3636 23.1742 13.5053C23.1742 13.7012 22.9235 13.8176 22.7729 13.6916C22.6963 13.6275 22.2562 12.5141 22.2562 12.3844C22.2562 12.1709 22.5061 12.0578 22.6619 12.2007ZM7.14237 14.706C7.74142 14.8329 8.29132 15.1381 8.74252 15.594C9.43557 16.2944 9.76505 17.1568 9.71765 18.1465C9.64768 19.6075 8.6835 20.8266 7.28622 21.2207C7.01434 21.2974 6.94016 21.3051 6.47256 21.3043C6.01624 21.3036 5.92481 21.2944 5.66428 21.223C4.39372 20.875 3.4349 19.7831 3.24801 18.4711C3.19853 18.1239 3.22646 17.4998 3.30603 17.1739C3.52924 16.2599 4.12705 15.4759 4.94659 15.0224C5.42097 14.7599 5.85828 14.6519 6.45742 14.6493C6.74558 14.648 6.94746 14.6648 7.14237 14.706ZM23.3457 15.4733C23.1154 15.5023 22.6282 15.6188 22.4251 15.6934C20.9006 16.253 19.8379 17.6531 19.6829 19.3058C19.566 20.5521 20.0009 21.7784 20.878 22.676C22.0126 23.8371 23.6141 24.2192 25.1314 23.6906C26.1103 23.3496 26.9719 22.5838 27.444 21.6353C27.7866 20.947 27.9001 20.4645 27.9004 19.694C27.9007 19.3014 27.8867 19.0983 27.8459 18.902C27.4834 17.1557 26.2599 15.8967 24.5706 15.5317C24.337 15.4812 23.5721 15.4448 23.3457 15.4733ZM5.93709 15.7508C5.53816 15.8501 5.10563 16.1184 4.81877 16.4446C4.45822 16.8546 4.27644 17.3124 4.25441 17.8662C4.23697 18.3045 4.29515 18.5976 4.47544 18.9796C5.1902 20.494 7.18395 20.7176 8.21514 19.399C8.39725 19.1662 8.51522 18.9344 8.61101 18.6213C8.70523 18.3134 8.71301 17.6557 8.62593 17.3645C8.38795 16.5689 7.78645 15.9647 7.03247 15.7642C6.7599 15.6917 6.20201 15.6849 5.93709 15.7508ZM24.1566 17.7382C24.9268 17.8953 25.5503 18.543 25.6956 19.3368C25.8138 19.983 25.6186 20.6076 25.147 21.0927C24.7617 21.4889 24.3424 21.669 23.7997 21.6714C23.449 21.6729 23.2 21.6111 22.8896 21.4457C22.4597 21.2166 22.1221 20.8197 21.9589 20.3517C21.8463 20.0287 21.8301 19.5073 21.922 19.1628C22.0152 18.8132 22.167 18.5523 22.4349 18.2808C22.9067 17.8026 23.5219 17.6087 24.1566 17.7382Z" fill="#566879"/></svg>',
  },
  {
    id: 7,
    name: 'Industrial',
    path: '/industrial',
    current: false,
    svg: '<svg width="29" height="28" viewBox="0 0 29 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M25.5784 5.40577V6.02663L25.4406 6.02854C25.3648 6.0296 25.1964 6.03454 25.0665 6.03953C24.6079 6.05713 20.5611 6.11113 19.3307 6.11607L18.0843 6.12109L17.6418 6.9308C17.3984 7.37614 17.0658 7.98342 16.9027 8.28032C16.5091 8.99661 15.4378 10.9534 15.2994 11.2088C15.2391 11.3201 14.9202 11.9031 14.5907 12.5043C14.2612 13.1055 13.9386 13.6946 13.8738 13.8133C13.1203 15.1947 12.3388 16.6223 12.332 16.6301C12.3272 16.6355 12.1544 16.5766 11.9478 16.4993C11.5999 16.369 10.7091 16.0408 8.0281 15.0553C5.68814 14.1952 5.15605 13.9899 4.97976 13.8789C4.76411 13.7432 3.13772 12.6257 2.37052 12.0861C1.35528 11.3719 0.900337 11.0376 0.900337 11.0057C0.900337 10.9448 1.24945 10.4665 2.14608 9.2992L2.37931 8.99556L8.40659 8.99516L14.4339 8.99478L15.0236 7.93579C15.348 7.35336 15.7497 6.63391 15.9162 6.33702L16.2191 5.79721L16.2322 5.29789L16.2454 4.79857L20.9119 4.79174L25.5784 4.78491V5.40577ZM23.0027 6.61461C23.1508 6.69105 23.3044 6.79577 23.3873 6.87682C23.5168 7.00338 23.5311 7.03104 23.6187 7.32216C23.8116 7.96329 24.3237 9.90384 24.5518 10.8579C24.7444 11.6633 24.7702 11.8187 24.7841 12.2557L24.7972 12.6684L25.1152 13.0115C25.29 13.2001 25.5295 13.4569 25.6473 13.5821L25.8615 13.8097L26.2076 13.8307C26.8431 13.8693 27.1477 14.0035 27.237 14.2843C27.2583 14.3512 27.2707 14.8726 27.278 16.013C27.2837 16.9111 27.2982 17.6562 27.3102 17.6688C27.3221 17.6814 27.423 17.7079 27.5342 17.7277C27.7672 17.7694 27.9038 17.8497 28.0189 18.0131C28.1025 18.1318 28.1407 18.3072 28.1143 18.4516C28.0913 18.5778 27.9553 18.7797 27.847 18.8485C27.7345 18.92 27.4564 18.945 26.544 18.9656L25.895 18.9802L25.8671 18.8664C25.5911 17.7423 25.0216 16.8762 24.1741 16.2917C23.4788 15.8122 22.5675 15.5761 21.7374 15.6603C20.978 15.7374 20.4259 15.9365 19.8529 16.34C18.8818 17.0238 18.2012 18.2862 18.2012 19.4039V19.6567H14.5034H10.8056L10.7896 19.3531C10.7714 19.0074 10.687 18.6025 10.5537 18.2208C10.1403 17.0377 9.08713 16.0729 7.85228 15.7461C7.10112 15.5472 6.10762 15.638 5.35221 15.9744C5.23777 16.0253 5.14029 16.067 5.13562 16.067C5.13095 16.067 5.12711 15.6905 5.12711 15.2303C5.12711 14.5348 5.13326 14.3936 5.16353 14.3936C5.196 14.3936 5.98 14.6771 8.19874 15.4912C8.58139 15.6316 9.17799 15.8504 9.52453 15.9774C9.87108 16.1044 10.2137 16.2303 10.2859 16.2572C11.1617 16.5835 12.4453 17.0386 12.473 17.0327C12.4925 17.0286 12.615 16.8308 12.7452 16.5933C13.2918 15.5964 15.961 10.7222 16.0487 10.561C16.1012 10.4645 16.5558 9.63253 17.0589 8.71216C17.5621 7.79179 18.0397 6.91731 18.1204 6.76886L18.267 6.49896L20.5116 6.49316L22.7562 6.48735L23.0027 6.61461ZM19.1201 9.43183V11.0017L20.9775 10.9828C22.9359 10.9629 23.808 10.9344 23.8523 10.8888C23.8705 10.8701 23.8058 10.6251 23.6504 10.1241C23.5246 9.71866 23.3451 9.13794 23.2514 8.83362C23.1577 8.5293 23.0513 8.18618 23.0149 8.07114L22.9488 7.86197H21.0344H19.1201V9.43183ZM22.6118 16.0277C23.7568 16.2419 24.7098 16.9731 25.2203 18.029C25.8002 19.2284 25.6543 20.6877 24.844 21.7941C24.3233 22.505 23.6163 22.9573 22.7135 23.1571C22.4095 23.2244 21.7173 23.2239 21.4041 23.1562C20.6711 22.9977 20.0722 22.665 19.5533 22.1282C19.1631 21.7245 18.9042 21.3156 18.7292 20.8261C18.613 20.5011 18.5673 20.2109 18.5514 19.6972C18.5291 18.9777 18.6129 18.5551 18.8863 18.0079C19.2188 17.3424 19.775 16.7424 20.3588 16.4193C20.7065 16.2268 21.1804 16.0685 21.5701 16.0145C21.8477 15.976 22.371 15.9827 22.6118 16.0277ZM7.22737 16.0044C7.70676 16.0406 8.00883 16.1207 8.42513 16.3223C9.36507 16.7773 10.0888 17.6792 10.3537 18.7256C10.4238 19.0022 10.4499 19.6627 10.4071 20.0775C10.3621 20.5143 10.2923 20.7621 10.1034 21.1547C9.74244 21.9052 9.1771 22.491 8.4744 22.8428C8.10003 23.0302 7.81051 23.1206 7.39185 23.1811C5.52579 23.4505 3.76073 22.0983 3.46074 20.1695C3.37946 19.6469 3.42149 18.9926 3.5657 18.536C3.65202 18.2627 3.85417 17.8253 4.00418 17.5873C4.68073 16.5138 5.91899 15.9056 7.22737 16.0044ZM21.5105 17.2562C20.794 17.3758 19.961 18.1876 19.79 18.9331C19.744 19.1338 19.7358 19.923 19.777 20.1965C19.8506 20.6862 20.322 21.3413 20.8171 21.6419C21.2379 21.8975 21.5677 21.9894 22.0605 21.9885C22.4415 21.9877 22.649 21.9453 22.9876 21.7989C23.7747 21.4586 24.3425 20.6118 24.3892 19.7087C24.4164 19.1831 24.2955 18.7481 23.9885 18.2667C23.662 17.7548 23.0641 17.3285 22.5724 17.2571C22.3438 17.2239 21.7075 17.2234 21.5105 17.2562ZM6.4271 17.2559C5.82965 17.3447 5.06557 17.9753 4.78863 18.6083C4.64783 18.9301 4.61604 19.1136 4.61649 19.6027C4.61693 20.1062 4.65797 20.314 4.82397 20.6528C5.04515 21.1044 5.55247 21.6091 5.98111 21.8039C6.28065 21.9401 6.52749 21.9866 6.96484 21.9891C7.3447 21.9912 7.38697 21.9863 7.60033 21.9144C8.36112 21.658 9.01701 20.9602 9.20747 20.2045C9.26219 19.9875 9.26423 19.2274 9.21075 18.9955C9.07508 18.4072 8.56225 17.7613 7.99302 17.4619C7.72795 17.3224 7.63603 17.2895 7.42304 17.2576C7.20249 17.2246 6.6445 17.2236 6.4271 17.2559ZM22.1563 18.7966C22.4337 18.8302 22.6528 18.9895 22.7679 19.2413C22.8199 19.3551 22.8261 19.4042 22.8171 19.6289C22.8081 19.8516 22.7963 19.9058 22.729 20.0325C22.6862 20.1129 22.6092 20.2133 22.558 20.2555C22.3805 20.4015 21.8969 20.4536 21.6988 20.348C21.5686 20.2786 21.3831 20.0898 21.3259 19.9682C21.2498 19.8066 21.2412 19.3941 21.311 19.2519C21.3693 19.1331 21.5501 18.9372 21.6535 18.8807C21.7859 18.8084 21.9824 18.7755 22.1563 18.7966ZM7.08353 18.7924C7.36434 18.8355 7.58381 19.0348 7.70059 19.353C7.84963 19.7591 7.60595 20.2257 7.17445 20.3604C6.77674 20.4847 6.39228 20.329 6.20875 19.9695C6.14871 19.852 6.1386 19.7991 6.1386 19.6027C6.1386 19.4065 6.14868 19.3538 6.20817 19.2384C6.38296 18.8993 6.70619 18.7346 7.08353 18.7924Z" fill="#566879"/></svg>',
  },
];

const modelData = [
  '155/65R13',
  '155/70R13',
  '155/65R14',
  '185/65R14',
  '205/65R14',
  '155/65R13',
  '155/70R13',
  '155/65R14',
  '205/65R16',
  '215/65R16',
  '215/60R16',
  '275/60R16',
  '205/65R16',
  '205/65R16',
  '215/65R16',
  '215/60R16',
];

function TabRow({ item, activeTab, onClick }) {
  return (
    <div
      onClick={() => onClick(item.value)}
      className={`
      relative z-10 ml-[3px] flex h-[60px] w-1/4 skew-x-[20deg] cursor-pointer items-center justify-center  p-2 transition-all after:absolute  after:bottom-0 after:left-0  after:-z-10 after:h-2 after:w-full after:-translate-y-[-8px] after:bg-red after:opacity-0 after:content-[''] 
  ${
    activeTab === item.value
      ? 'h-[68px] -translate-x-[1px] -translate-y-2 bg-[rgba(0,0,0,1)] duration-300 after:-bottom-2 after:translate-y-0 after:opacity-100 [&>p]:-translate-y-1'
      : 'bg-[rgba(0,0,0,.5)] hover:bg-[rgba(0,0,0,.6)]'
  }
  `}
    >
      <p className="-skew-x-[20deg] text-xl font-medium text-white">
        {item.label}
      </p>
    </div>
  );
}

function HomePage() {
  const tabs = [
    {
      value: 'categories',
      label: 'Car categories',
    },
    {
      value: 'options',
      label: 'Options',
    },
    {
      value: 'brands',
      label: 'Brands',
    },
    {
      value: 'automobile',
      label: 'Automobile',
    },
  ];
  const [activeTab, setActiveTab] = useState('categories');

  function handleTab(value) {
    setActiveTab(value);
  }

  return (
    <div className="py-24 pb-12">
      <div className="category-selection rounded bg-white drop-shadow-[0px_20px_50px_rgba(2,36,86,0.1)]">
        <div className="category-selection-top flex">
          <div className="mt-5 min-w-[380px] text-center text-xl font-bold uppercase">
            <p>Tire selection by:</p>
          </div>
          <div className="mr-4 flex w-full">
            {tabs.map((item) => (
              <TabRow
                key={item.value}
                item={item}
                activeTab={activeTab}
                onClick={handleTab}
              />
            ))}
          </div>
        </div>
        {/* content 1, Categories */}
        {'1' && (
          <div className="category-selection-content mb-10 flex p-4 pt-0">
            <div className="content-left min-w-[57%] max-w-[57%] rounded  px-4 pt-4">
              <Content>
                <div className="flex">
                  <div className="w-full">
                    <ul className="flex h-full flex-col">
                      {catalog.map((catalog) => (
                        <li
                          key={catalog.id}
                          className={`group relative flex h-[70px] items-center border border-lightgray px-[35px] transition duration-300 after:absolute after:left-0 after:top-0 after:h-full   after:bg-red after:transition after:duration-300 after:content-[''] hover:shadow-[5px_15px_30px_0px_rgba(0,0,0,0.10)] hover:after:w-[2px]
                            ${
                              catalog.path === '/cars'
                                ? 'active shadow-[5px_15px_30px_0px_rgba(0,0,0,0.10)] after:w-[2px]'
                                : 'after:w-[0]'
                            }
                          `}
                        >
                          <span
                            className={`${
                              catalog.path === '/cars' &&
                              '[&>svg>g>path]:fill-[black] [&>svg>path]:fill-[black]'
                            }  w-[44px]  group-hover:[&>svg>g>path]:fill-[black] group-hover:[&>svg>path]:fill-[black]`}
                            dangerouslySetInnerHTML={{ __html: catalog.svg }}
                          ></span>
                          <p
                            className={`${
                              catalog.path === '/cars'
                                ? 'text-black'
                                : 'text-extragray'
                            } ml-6 text-lg font-medium  group-hover:text-black`}
                          >
                            {catalog.name}
                          </p>
                        </li>
                      ))}
                    </ul>
                  </div>
                  <div className="ml-4 flex h-full max-h-[307px] min-w-[300px] flex-col bg-lightgray px-5 pb-0 pt-4">
                    {[1, 2, 3].map((item) => (
                      <div key={item} className="mb-3">
                        <p className="mb-1 text-extragray">Marka</p>
                        <Select
                          width={'100%'}
                          height={'40px'}
                          iconSize={'5'}
                          dataSource={[
                            { id: 1, name: '195' },
                            { id: 2, name: '200' },
                          ]}
                        />
                      </div>
                    ))}
                    <p>
                      <img src="" alt="" />
                    </p>
                  </div>
                </div>
              </Content>
            </div>
            <div className="content-right w-full overflow-hidden rounded bg-white px-4 pt-3">
              <Content title={'Settings'}>
                <div className="flex w-full items-end">
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Width</p>
                    <Select
                      width={'100%'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                  <p className="mx-3 h-[35px] text-[20px] text-[#191717] opacity-30">
                    /
                  </p>
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Profile</p>
                    <Select
                      width={'100%'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                  <p className="mx-3 h-[35px] text-[20px] text-[#191717] opacity-30">
                    R
                  </p>
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Diametr</p>
                    <Select
                      width={'100%'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                </div>
              </Content>
              <p className="mb-3"></p>
              <ContentRight title={'Seasonality'}>
                <div className="mb-[10px] flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/winter-snow.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">Winter</span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/sunny.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">Summer</span>
                  </div>
                  <div className=" flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/sunny-winter.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">
                      All seasons
                    </span>
                  </div>
                </div>
                <div className="mb-4 flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/winter.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Not shipovniy
                    </span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/shipovniy.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Shipovniy
                    </span>
                  </div>
                </div>

                {/* texts */}
                <p className="mb-4 text-extragray">
                  Found this query:
                  <span className="ml-2 font-bold text-black">154 offers</span>
                </p>
                <div className="flex">
                  <Button onClick={() => {}} type="danger" className="w-full">
                    Pick up
                  </Button>
                  <Button
                    onClick={() => {}}
                    type="black"
                    className="ml-[10px] w-full"
                  >
                    <XMarkIcon className="text-gray-white mr-1 h-6 w-6" />
                    <span>Reset</span>
                  </Button>
                </div>
              </ContentRight>
            </div>
          </div>
        )}

        {/* content 2, Options */}
        {'' && (
          <div className="category-selection-content mb-10 flex p-4 pt-3">
            <div className="content-left rounded bg-lightgray px-4 pt-4">
              <Content title={'Settings'}>
                <div className="flex w-full items-end">
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Width</p>
                    <Select
                      width={'190px'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                  <p className="mx-3 h-[35px] text-[20px] text-[#191717] opacity-30">
                    /
                  </p>
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Profile</p>
                    <Select
                      width={'190px'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                  <p className="mx-3 h-[35px] text-[20px] text-[#191717] opacity-30">
                    R
                  </p>
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Diametr</p>
                    <Select
                      width={'190px'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                </div>
                <div className="image mx-auto mt-[10px] max-w-[488px]">
                  <img className="w-full" src="/img/header/frame.svg" alt="" />
                </div>
              </Content>
            </div>
            <div className="content-right w-full overflow-hidden rounded bg-white px-4 pt-3">
              <ContentRight title={'Seasonality'}>
                <div className="mb-[10px] flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/winter-snow.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">Winter</span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/sunny.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">Summer</span>
                  </div>
                  <div className=" flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/sunny-winter.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">
                      All seasons
                    </span>
                  </div>
                </div>
                <div className="flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/winter.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Not shipovniy
                    </span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/shipovniy.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Shipovniy
                    </span>
                  </div>
                </div>
                {/* marks */}
                <div className="my-5">
                  <div className="scrollbar -m-0.5 mb-2 grid grid-flow-col grid-rows-2 overflow-x-auto">
                    {modelData.map((model, index) => (
                      <div
                        key={index}
                        className="m-0.5 flex h-[34px] items-center justify-center rounded border border-[#E2E9F2] bg-white px-3 text-sm text-[#566879] transition-all ease-out hover:bg-red hover:text-white"
                      >
                        {model}
                      </div>
                    ))}
                  </div>
                </div>
                {/* texts */}
                <p className="mb-4 text-extragray">
                  Found this query:
                  <span className="ml-2 font-bold text-black">154 offers</span>
                </p>
                <div className="flex">
                  <button className="h-[50px] w-full rounded bg-red px-4 py-2 font-bold text-white">
                    Pick up
                  </button>
                  <button className="ml-[10px] flex h-[50px] w-full items-center justify-center rounded bg-black px-4 py-2 font-bold text-white">
                    <XMarkIcon className="text-gray-white mr-1 h-6 w-6" />
                    <span>Reset</span>
                  </button>
                </div>
              </ContentRight>
            </div>
          </div>
        )}
        {/* content 3, Brands */}
        {'' && (
          <div className="category-selection-content mb-10 flex p-4 pt-3">
            <div className="content-left min-w-[57%] max-w-[57%] rounded bg-lightgray px-4 pt-4">
              <Content title={'Brands'}>
                <div className="scrollbar max-h-[307px] overflow-y-auto pb-1">
                  <div className="grid  grid-cols-4 grid-rows-4 gap-[10px] ">
                    {[
                      1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18,
                      19, 21, 22, 23, 34, 45, 56, 42, 43, 54, 65, 76, 87, 90,
                    ].map((item) => (
                      <p
                        key={item}
                        className="flex h-[60px] items-center justify-center rounded bg-white px-[10px] py-2 transition-all  hover:shadow-[0px_20px_50px_0px_rgba(2,36,86,0.05)]"
                      >
                        <img
                          className="h-full w-full"
                          src="/img/catalog/brand/odyking.svg"
                          alt=""
                        />
                      </p>
                    ))}
                  </div>
                </div>
              </Content>
            </div>
            <div className="content-right w-full overflow-hidden rounded bg-white px-4 pt-3">
              <Content title={'Settings'}>
                <div className="flex w-full items-end">
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Width</p>
                    <Select
                      width={'100%'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                  <p className="mx-3 h-[35px] text-[20px] text-[#191717] opacity-30">
                    /
                  </p>
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Profile</p>
                    <Select
                      width={'100%'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                  <p className="mx-3 h-[35px] text-[20px] text-[#191717] opacity-30">
                    R
                  </p>
                  <div className="basis-1/3">
                    <p className="mb-1 text-extragray">Diametr</p>
                    <Select
                      width={'100%'}
                      height={'40px'}
                      iconSize={'5'}
                      dataSource={[
                        { id: 1, name: '195' },
                        { id: 2, name: '200' },
                      ]}
                    />
                  </div>
                </div>
              </Content>
              <p className="mb-3"></p>
              <ContentRight title={'Seasonality'}>
                <div className="mb-[10px] flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/winter-snow.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">Winter</span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/sunny.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">Summer</span>
                  </div>
                  <div className=" flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/sunny-winter.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">
                      All seasons
                    </span>
                  </div>
                </div>
                <div className="mb-4 flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/winter.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Not shipovniy
                    </span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/shipovniy.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Shipovniy
                    </span>
                  </div>
                </div>

                {/* texts */}
                <p className="mb-4 text-extragray">
                  Found this query:
                  <span className="ml-2 font-bold text-black">154 offers</span>
                </p>
                <div className="flex">
                  <button className="h-[50px] w-full rounded bg-red px-4 py-2 font-bold text-white">
                    Pick up
                  </button>
                  <button className="ml-[10px] flex h-[50px] w-full items-center justify-center rounded bg-black px-4 py-2 font-bold text-white">
                    <XMarkIcon className="text-gray-white mr-1 h-6 w-6" />
                    <span>Reset</span>
                  </button>
                </div>
              </ContentRight>
            </div>
          </div>
        )}

        {/* content 4, Avtomobil */}
        {'' && (
          <div className="category-selection-content mb-10 flex p-4 pt-3">
            <div className="content-left min-w-[57%] rounded bg-lightgray px-4 pt-4">
              <Content title={'Selection by car brand'}>
                <div className="flex flex-col">
                  {[1, 2, 3, 4].map((item) => (
                    <div key={item} className="mb-3">
                      <p className="mb-1 text-extragray">Marka</p>
                      <Select
                        width={'100%'}
                        height={'40px'}
                        iconSize={'5'}
                        dataSource={[
                          { id: 1, name: '195' },
                          { id: 2, name: '200' },
                        ]}
                      />
                    </div>
                  ))}
                </div>
              </Content>
            </div>
            <div className="content-right w-full overflow-hidden rounded bg-white px-4 pt-3">
              <ContentRight title={'Seasonality'}>
                <div className="mb-[10px] flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/winter-snow.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">Winter</span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/sunny.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">Summer</span>
                  </div>
                  <div className=" flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img
                      className="w-[20px]"
                      src="/img/sunny-winter.svg"
                      alt=""
                    />
                    <span className="ml-[10px] text-sm font-bold">
                      All seasons
                    </span>
                  </div>
                </div>
                <div className="flex h-[46px] w-full gap-[5px] rounded border border-[#F6F6F6] bg-lightgray p-[5px]">
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/winter.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Not shipovniy
                    </span>
                  </div>
                  <div className="is-active flex w-full items-center justify-center rounded-[3px] [&.is-active]:bg-white [&.is-active]:shadow-[0px_-1px_0px_0px_#D7E0E9_inset]">
                    <img className="w-[20px]" src="/img/shipovniy.svg" alt="" />
                    <span className="ml-[10px] text-sm font-bold">
                      Shipovniy
                    </span>
                  </div>
                </div>
                {/* marks */}
                <div className="my-5">
                  <div className="scrollbar -m-0.5 mb-2 grid grid-flow-col grid-rows-2 overflow-x-auto">
                    {modelData.map((model, index) => (
                      <div
                        key={index}
                        className="m-0.5 flex h-[34px] items-center justify-center rounded border border-[#E2E9F2] bg-white px-3 text-sm text-[#566879] transition-all ease-out hover:bg-red hover:text-white"
                      >
                        {model}
                      </div>
                    ))}
                  </div>
                </div>
                {/* texts */}
                <p className="mb-4 text-extragray">
                  Found this query:
                  <span className="ml-2 font-bold text-black">154 offers</span>
                </p>
                <div className="flex">
                  <button className="h-[50px] w-full rounded bg-red px-4 py-2 font-bold text-white">
                    Pick up
                  </button>
                  <button className="ml-[10px] flex h-[50px] w-full items-center justify-center rounded bg-black px-4 py-2 font-bold text-white">
                    <XMarkIcon className="text-gray-white mr-1 h-6 w-6" />
                    <span>Reset</span>
                  </button>
                </div>
              </ContentRight>
            </div>
          </div>
        )}
      </div>

      <div className="flex items-center justify-between">
        <h2 className="text-[22px] font-bold tracking-tight text-gray-900 md:text-[30px]">
          News
        </h2>
        <Button type="danger" to={'/news'}>
          All news
        </Button>
      </div>
      <Swiper
        className="mt-3"
        modules={[Navigation]}
        spaceBetween={10}
        slidesPerView={1.3}
        navigation
        breakpoints={{
          640: {
            slidesPerView: 2,
            spaceBetween: 15,
          },
          768: {
            slidesPerView: 3,
            spaceBetween: 20,
          },
          1024: {
            slidesPerView: 4,
            spaceBetween: 20,
          },
        }}
      >
        {products.map((product) => (
          <SwiperSlide key={product.id}>
            <div
              key={product.id}
              className="group relative flex h-full flex-col overflow-hidden rounded border border-[#E6E6E6] bg-white"
            >
              <p className="h-[250px] flex-auto ">
                <img
                  className="h-full w-full object-cover"
                  src="/img/news.png"
                  alt=""
                />
              </p>
              <div className="h-full p-5">
                <div className="mb-2 flex">
                  <p className="flex items-center">
                    <CalendarDaysIcon className="h-5 w-5 text-extragray" />
                    <span className="ml-[6px] text-sm font-medium text-extragray">
                      03 january, 11:51
                    </span>
                  </p>
                  <p className="ml-3 flex items-center">
                    <EyeIcon className="h-5 w-5 text-extragray" />
                    <span className="ml-[6px] text-sm font-medium text-extragray">
                      378
                    </span>
                  </p>
                </div>
                <h2 className="mb-2 font-bold sm:text-lg">
                  Заказывайте через сайт, получайте скидку
                </h2>
                <p className=" truncate text-sm text-extragray">
                  ТОО "Компания Шин Line" предлагает воспользоваться скидкой на
                  весь ассортимент шин.{' '}
                </p>
              </div>
            </div>
          </SwiperSlide>
        ))}
      </Swiper>
      <Modal />
    </div>
  );
}

export default HomePage;

const Modal = () => {
  const [modalOpen, setModalOpen] = useState(false);
  const [modalOpen2, setModalOpen2] = useState(false);

  const trigger = useRef(null);
  const modal = useRef(null);

  // close on click outside
  useEffect(() => {
    const clickHandler = ({ target }) => {
      if (!modal.current) return;
      if (
        !modalOpen ||
        modal.current.contains(target) ||
        trigger.current.contains(target)
      )
        return;
      setModalOpen(false);
    };
    document.addEventListener('click', clickHandler);
    return () => document.removeEventListener('click', clickHandler);
  });

  // close if the esc key is pressed
  useEffect(() => {
    const keyHandler = ({ keyCode }) => {
      if (!modalOpen || keyCode !== 27) return;
      setModalOpen(false);
    };
    document.addEventListener('keydown', keyHandler);
    return () => document.removeEventListener('keydown', keyHandler);
  });

  return (
    <>
      <div className="container mx-auto py-20">
        <button
          ref={trigger}
          onClick={() => setModalOpen(true)}
          className={`bg-primary text-red-900 rounded-full px-6 py-3 text-base font-medium`}
        >
          Open Modal
        </button>
        <button
          ref={trigger}
          onClick={() => setModalOpen2(true)}
          className={`bg-primary text-red-900 rounded-full px-6 py-3 text-base font-medium`}
        >
          Open Modal 2
        </button>

        <div
          className={`fixed left-0 top-0 z-30 hidden h-full min-h-screen w-full items-center justify-center bg-black bg-opacity-90 px-4 py-5  ${
            modalOpen ? 'hidden lg:flex' : 'hidden'
          }`}
        >
          <div
            ref={modal}
            onFocus={() => setModalOpen(true)}
            onBlur={() => setModalOpen(false)}
            className="flex w-full max-w-[1150px] overflow-hidden rounded-[15px] bg-white text-center"
          >
            <div className=" max-w-[70%]">
              <div className=" bg-white">
                <h2 className="px-[70px] pb-[30px] pt-[35px] text-left text-2xl font-bold leading-tight tracking-tight text-gray-800 ">
                  Lorem, ipsum dolor ipsum dolor Ice-Freezer 225/60 R17 103T в
                  Kazakhstan
                </h2>
                <div className="flex">
                  {/* left-page */}
                  <div className="relative flex-[50%] border border-[#E2E9F2]">
                    <p className="flex h-full items-center justify-center overflow-hidden ">
                      <img
                        src="/public/img/01-big.png"
                        className="ml-16 w-[65%] object-cover object-center "
                        alt=""
                      />
                    </p>
                    <div className="absolute left-2 top-2">
                      <p className="is-active is-active:border-[#15A524] mb-1 h-16 w-16 cursor-pointer border bg-white p-2 transition-all hover:border-[#15A524] sm:mb-2 sm:h-20 sm:w-20">
                        <img
                          src="/public/img/01.png"
                          className="h-full w-full object-cover object-center"
                          alt=""
                        />
                      </p>
                      <p className=" is-active:border-[#15A524] mb-1 h-16 w-16 cursor-pointer border bg-white p-2 transition-all hover:border-[#15A524] sm:mb-2 sm:h-20 sm:w-20">
                        <img
                          src="/public/img/shina-min1.png"
                          className="h-full w-full object-cover object-center"
                          alt=""
                        />
                      </p>
                      <p className="is-active:border-[#15A524] mb-1 h-16 w-16 cursor-pointer border bg-white p-2 transition-all hover:border-[#15A524] sm:mb-2 sm:h-20 sm:w-20">
                        <img
                          src="/public/img/shina-min2.png"
                          className="h-full w-full object-cover object-center"
                          alt=""
                        />
                      </p>
                    </div>
                  </div>

                  {/* right-page */}
                  <div className="flex flex-[50%] flex-col border border-x-0 border-[#E2E9F2]">
                    <div className="p-4 sm:p-7">
                      <h2 className="mb-4 text-[20px] font-bold">
                        Characteristics:
                      </h2>
                      {[1, 2, 3, 4, 5].map((character) => {
                        return (
                          <div
                            key={character}
                            className="relative mb-3 flex justify-between before:absolute before:bottom-[6px] before:w-full before:border before:border-dashed before:border-[#566879] before:opacity-20 before:content-['']"
                          >
                            <p className="z-[2] bg-white pr-4 font-light">
                              Profile width
                            </p>
                            <b className="z-[2] bg-white pl-4">225</b>
                          </div>
                        );
                      })}
                      <div className="mb-2  mt-6 flex cursor-pointer items-center justify-center  sm:mt-14">
                        <button className="flex h-10 w-10 items-center justify-center rounded-[50%] bg-[#F1F3F4]">
                          <ChevronDoubleDownIcon className="h-4 w-4 text-black" />
                        </button>
                        <p className=" ml-3 border-b-[2px] border-dashed">
                          All characteristics
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className="flex w-full justify-between">
                <p className="ml-10 flex items-center text-sm text-[#566879]">
                  Articul: 00000017910
                </p>
                <div className="flex">
                  <div className="flex h-[58px] w-[58px] items-center justify-center border-x-[1px]  border-[#E2E9F2]">
                    <img className="w-[40px]" src="/img/car.svg" alt="" />
                  </div>
                  <div className="flex h-[58px] w-[58px] items-center justify-center border-r-[1px]  border-[#E2E9F2]">
                    <img
                      className="w-5 sm:w-[unset]"
                      src="/img/winter.svg"
                      alt=""
                    />
                  </div>
                  <div className="flex h-[58px] w-[58px] items-center justify-center">
                    <img
                      className="w-5 sm:w-[unset]"
                      src="/img/shipovniy.svg"
                      alt=""
                    />
                  </div>
                </div>
              </div>
            </div>
            <div className="w-full max-w-[30%] border-l border-[#E2E9F2] bg-[#F8FAFD]">
              {/* top */}
              <div className="flex h-[50px] w-full border-[#E2E9F2] ">
                <div className="flex flex-[33.333%] cursor-pointer items-center justify-center  border-[#E2E9F2]  ">
                  <ShareIcon className="h-6 w-6 text-[#566879]" />
                </div>
                <div className="flex flex-[33.333%] cursor-pointer items-center justify-center border-l-[1px] border-[#E2E9F2] ">
                  <HeartIcon className="h-6 w-6 text-[#566879]" />
                </div>
                <div className="flex flex-[33.333%] cursor-pointer items-center justify-center border-l-[1px] border-[#E2E9F2]  bg-[#E31E24]">
                  <XMarkIcon className="h-6 w-6 text-white" />
                </div>
              </div>
              {/* actions */}
              <div className="relative  border-b border-t border-[#E2E9F2] p-6 ">
                <div className="mb-8 flex items-center justify-between">
                  <h2 className="text-[24px] font-extrabold sm:text-[28px]">
                    $46,00
                  </h2>
                </div>
                <div className="flex">
                  <div className="flex h-[48px] w-[130px] items-center justify-between rounded bg-white p-1">
                    <button className=" flex h-[43px] w-[36px] items-center justify-center rounded-l-[5px] bg-[#F1F3F4] font-semibold">
                      <span>-</span>
                    </button>
                    <input
                      type="text"
                      className="h-[32px] w-[35px] rounded  bg-gray-100 bg-transparent px-2 pl-3 text-[18px] outline-none"
                      value={'1'}
                      onChange={(e) => e.target.value}
                    />
                    <button className=" flex h-[43px] w-[36px] items-center justify-center rounded-r-[5px] bg-[#F1F3F4] font-semibold">
                      <span>+</span>
                    </button>
                  </div>
                  <button className="ml-2 flex h-[48px] items-center justify-center rounded bg-[#15A524] px-5 py-2 text-xs font-medium  leading-normal text-white">
                    <ShoppingCartIcon className="text-bold h-5 w-5 text-white" />
                    <span className="ml-2 whitespace-nowrap text-base">
                      Add to cart
                    </span>
                  </button>
                </div>
              </div>

              <div className="border-b border-[#E2E9F2]  px-6 py-4">
                {true ? (
                  <p className="mb-1 flex items-center whitespace-nowrap text-[15px]">
                    <b className=" text-[#15A524]">In stock:</b>{' '}
                    <span className="ml-2  text-[#566879]">
                      Left from 4 to 20 pieces
                    </span>
                  </p>
                ) : (
                  <b className="text-[15px] text-[#E31E24]">Not available</b>
                )}
                <p className="flex items-center whitespace-nowrap text-[15px]">
                  <b className=" text-[#15A524]">Category:</b>{' '}
                  <span className="ml-2  text-[#566879]">Light trucks</span>
                </p>
              </div>
              <p className="px-5 py-4">
                <img width="150" src="/img/brand-tire.svg" alt="" />
              </p>
            </div>
          </div>
        </div>
        <Modal2
          modalOpen2={modalOpen2}
          onClick={setModalOpen2}
          modal2={modal}
        />
      </div>
    </>
  );
};

function Modal2({ modalOpen2, onClick, modal2 }) {
  const [isChecked, setIsChecked] = useState(false);

  const handleCheckboxChange = () => {
    setIsChecked(!isChecked);
  };
  return (
    <div
      className={`fixed left-0 top-0 z-30  h-full min-h-screen w-full items-center justify-center bg-black bg-opacity-90 px-4 py-5  ${
        modalOpen2 ? ' flex' : 'hidden'
      }`}
    >
      <div
        ref={modal2}
        onFocus={() => onClick(true)}
        onBlur={() => onClick(false)}
        className="relative w-full rounded bg-white py-8 sm:w-[550px] sm:rounded-[15px]"
      >
        <XMarkIcon className="absolute right-2 top-2 h-10 text-red" />
        <div className="px-4 sm:px-12">
          <h2 className="mx-auto my-4 text-center text-2xl font-bold sm:text-3xl">
            Login to your personal account
          </h2>
          <Input label={'Login'} type={'text'} onChange={onClick} />
          <Input label={'Password'} type={'text'} onChange={onClick} />
          <div className="mb-8 flex flex-col items-center sm:flex-row sm:justify-between">
            <label className="mb-3 flex cursor-pointer select-none items-center">
              <input
                type="checkbox"
                checked={isChecked}
                onChange={handleCheckboxChange}
                className="peer sr-only"
              />
              <div className="mr-[12px] flex h-5 w-5 items-center justify-center rounded border border-[#E2E9F2] bg-white peer-checked:border-[#15A524]">
                <span className={`${isChecked ? 'opacity-100' : 'opacity-0'}`}>
                  <svg
                    width="11"
                    height="8"
                    viewBox="0 0 11 8"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M10.0915 0.951972L10.0867 0.946075L10.0813 0.940568C9.90076 0.753564 9.61034 0.753146 9.42927 0.939309L4.16201 6.22962L1.58507 3.63469C1.40401 3.44841 1.11351 3.44879 0.932892 3.63584C0.755703 3.81933 0.755703 4.10875 0.932892 4.29224L0.932878 4.29225L0.934851 4.29424L3.58046 6.95832C3.73676 7.11955 3.94983 7.2 4.1473 7.2C4.36196 7.2 4.55963 7.11773 4.71406 6.9584L10.0468 1.60234C10.2436 1.4199 10.2421 1.1339 10.0915 0.951972ZM4.2327 6.30081L4.2317 6.2998C4.23206 6.30015 4.23237 6.30049 4.23269 6.30082L4.2327 6.30081Z"
                      fill="#15A524"
                      stroke="#15A524"
                      strokeWidth="0.6"
                    ></path>
                  </svg>
                </span>
              </div>
              <span
                className={`${isChecked ? 'text-black' : 'text-extragray'}`}
              >
                Remember password
              </span>
            </label>
            <p className="font-bold text-red underline">Reset password</p>
          </div>
          <button className="h-[50px] w-full rounded bg-green text-white transition hover:shadow-[0px_4px_10px_0px_rgba(21,165,36,0.50)]">
            Sign In
          </button>

          <hr className="my-10 bg-[#E2E9F2]" />
          <div className="flex flex-col sm:flex-row">
            <button className="mb-3 h-[50px] w-full rounded border text-black transition hover:shadow-[0px_4px_10px_0px_rgba(21,165,36,0.50)] sm:mb-0">
              Registration
            </button>
            <p className="text-[11px] text-extragray sm:ml-5 sm:max-w-[60%]">
              Вам будет доступно управление рассылками, использование
              персональных данных, связь профиля с аккаунтом соцсети и т.д.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}

function Content({ title, children }) {
  return (
    <div>
      {title && <h2 className="mb-3 text-xl font-bold">{title}</h2>}
      {children}
    </div>
  );
}

function ContentRight({ title, children }) {
  return (
    <div className="flex flex-col justify-end">
      {title && <h2 className="mb-3 text-xl font-bold">{title}</h2>}
      {children}
    </div>
  );
}
